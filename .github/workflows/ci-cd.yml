name: Docker Image CI CD

on:
  push:
    branches: ["master"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build client image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-client ./client

    - name: Build server image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-server ./server

    - name: Push client image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/chat-client

    - name: Push server image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/chat-server

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

          docker pull ${{ secrets.DOCKER_USERNAME }}/chat-client
          docker pull ${{ secrets.DOCKER_USERNAME }}/chat-server

          docker stop chat-client || true && docker rm chat-client || true
          docker stop chat-server || true && docker rm chat-server || true
          docker stop nginx || true && docker rm nginx || true

          docker network create chat-net || true

          docker run -d --name chat-client --network chat-net ${{ secrets.DOCKER_USERNAME }}/chat-client
          docker run -d --name chat-server --network chat-net ${{ secrets.DOCKER_USERNAME }}/chat-server

          docker run -d \
            --name nginx \
            --network chat-net \
            -p 80:80 -p 443:443 \
            -v /etc/nginx/conf.d:/etc/nginx/conf.d \
            -v /etc/letsencrypt:/etc/letsencrypt \
            -v /var/www/certbot:/var/www/certbot \
            nginx